# Welcome !

This is my Home Automation Repository.
Currently it represents the root of my home assistant installation.
In the future this may be migrated from home assistant to home assistant core and seperate deployments on kubernetes.

## Software

This is my Home Assistant installation. Some statistics about my installation:

Description | value
-- | --
Number of entities | {{states | count}}
Number of sensors | {{states.sensor | count}}

It is built using the following components:

- card_mod
- layout_card
- browser_mod
- lovelace_gen
- magic_areas
- alarmo
- adaptive_lighting
- esphome
- frigate

Inspiration from:

- mushroom
- dwains dashboard
- homekit infused

### Lovelace / Frontend

The main idea is that there is just a single dashboard, with 3 types of views:

1. The main view in `lovelace/0_main.yaml`
1. Per room from `lovelace_rooms.yaml` a view in `lovelace/rooms.yaml`
1. Per view from `lovelace_views.yaml` a subview in `lovelace/views.yaml`

The 'scaffolding' or build-up of each view is exactly the same:

```yaml
type: panel
path: '{{ view.name }}'
cards:
  - type: vertical-stack
    cards:
      - type: conditional
        conditions:
          - condition: screen
            media_query: '(orientation: landscape)'
        card:
          type: custom:mod-card
          card_mod:
            class: invisible
            style:
              .: |
                ha-card {
                  {{ "{%" }} if expand('media_player.alles')|selectattr("attributes.entity_picture","defined")| list | count > 0 {{ "%}" }}
                  background: center / contain no-repeat fixed url( '{{ "{{" }} expand('media_player.alles')|selectattr("attributes.entity_picture","defined")|map(attribute="attributes")|groupby("entity_picture")|first|first|replace('MaxWidth=150&', '') {{ "}}" }}' );
                  {{ "{%" }} endif {{ "%}" }}
                }
          card:
            type: vertical-stack
            cards:
              - !include
                - .cards/sticky.yaml
                - view: {{ view.name }}
                  position: both
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout: !include 
                  - .cards/layout.yaml
                  - sticky: header
                cards: !include
                  - .cards/{{ view.name }}.yaml
                  - orientation: landscape
      - type: conditional
        conditions:
          - condition: screen
            media_query: '(orientation: portrait)'
        card:
          type: custom:mod-card
          card_mod:
            class: invisible
            style:
              .: |
                ha-card {
                  {{ "{%" }} if expand('media_player.alles')|selectattr("attributes.entity_picture","defined")| list | count > 0 {{ "%}" }}
                  background: center / contain no-repeat fixed url( '{{ "{{" }} expand('media_player.alles')|selectattr("attributes.entity_picture","defined")|map(attribute="attributes")|groupby("entity_picture")|first|first|replace('MaxWidth=150&', '') {{ "}}" }}' );
                  {{ "{%" }} endif {{ "%}" }}
                }
          card:
            type: vertical-stack
            cards:
              - !include
                - .cards/sticky.yaml
                - view: {{ view.name }}
                  position: header
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout: !include 
                  - .cards/layout.yaml
                  - sticky: both
                cards: !include .cards/{{ view.name }}.yaml
              - !include
                - .cards/sticky.yaml
                - view: {{ view.name }}
                  position: footer
```

#### Lovelace_gen

- `configuration.yaml`
- `ui-lovelace.yaml`
- `resources.yaml`
- `lovelace_rooms.yaml`
- `lovelace_views.yaml`
- `lovelace/**/*`

#### Sticky bar(s)

- `themes/transparent.yaml`
- `lovelace/.cards/sticky.yaml`

#### Masonry for layout_card grid layout

- `www/style.js`
- `lovelace/.cards/layout.yaml`

#### HACS Lovelace cards

{%- for component in hacs_components | selectattr('category', 'equalto', 'plugin') | sort(attribute='name') %}
- [{{component.name}}]({{component.documentation}})
{%- endfor %}

#### Themes

{%- for component in hacs_components | selectattr('category', 'equalto', 'theme') | sort(attribute='name') %}
- [{{component.name}}]({{component.documentation}})
{%- endfor %}
- `themes/transparent.yaml`

### Backend

The main thing I need to do to make life easier is to template a package with jinja2 so that I can
use info from my `lovelace_gen` vars to create home-assistant configuration.
This will make it easier to create any needed helpers/groups/universalmediaplayers/etc.

For now the main 'trick' I use is for example that the entity_id of the main/universal media_player in each
room matches the room name.

#### Add-ons / Containers

{%- for addon in addons | sort(attribute='name') %}
- {{addon.name}}
{%- endfor %}

{%- set custom_component_descriptions = {"readme": "Generates this awesome readme file."} -%}
{% for integration in custom_components %}
### [{{integration.name}}]({{integration.documentation}})
{% if integration.domain in custom_component_descriptions %}
_{{custom_component_descriptions[integration.domain]}}_
{% endif -%}
{% endfor -%}

#### HACS Custom integrations

{%- for component in hacs_components | selectattr('category', 'equalto', 'integration') | sort(attribute='name') %}
- [{{component.name}}]({{component.documentation}})
{%- endfor %}

## Hardware

### Network

- 2x Ubiquity Switch Lite PoE
- 2x Ubiquity Switch Lite
- 1x Ubiquity AP-AC-LR
- 1x Ubiquity AP-AC6-Lite

### Nodes

- 3x Old Boxes
  - OPNSense
  - Home Assistant (ha ingress / cloudflared)
  - Docker Compose (webhost / cloudflared)

### Zigbee

- 3x Aqara Motion
- 3x Aqara Contact
- Ikea Tradfri 10W Strip Driver
- Niko Switch
- Hue in-wall Switch
- 2x Hue White Bulb
- 1x Hue Plafonniere with Hue Wall Remote

### Relays / Plugs / Switches

### Household / Pets

- 1x tuya pet fountain
- 1x Roborock Robot Vacuum

### Media

- 1x Google Nest Hub (dashcast)
- 1x Google Nest Mini
- 1x Google Home
- 2x Amazon Fire HD10+ (fire toolkit / fully kiosk / airreceiver / tasker)
- 1x Amazon Fire HD8 (fire toolkit / fully kiosk)
- 2x Google Chromecast 4K with Google TV (adb enabled)

***

Generated by the [custom readme integration](https://github.com/custom-components/readme)
