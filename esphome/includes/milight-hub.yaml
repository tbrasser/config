substitutions:
  name: milighthub

esphome:
  name: ${name}-${location}
  friendly_name: "${name} ${location}"
  # platformio_options:                 #optional, to set additional build flags
  #   build_flags:                      #optional, to set additional build flags
  #     - "-D USE_ESP32_ALTERNATE_SPI"  #optional, to use the alternate HSPI SPI bus instead of the default VSPI on an ESP32 board
  #     - "-D ALT_SPI_MISO_PIN=15"      #optional, if HSPI bus is used, alternate pins can also be defined
  #     - "-D ALT_SPI_MOSI_PIN=14"
  #     - "-D ALT_SPI_SCLK_PIN=12"
  #     - "-D ALT_SPI_SS_PIN=26"
  libraries:
    - milight=https://github.com/hencou/esphome-milight

external_components:
  - source: github://hencou/esphome_components
    components: mi

esp32:
  board: wemos_d1_mini32

captive_portal:

bluetooth_proxy:

mi:
  ce_pin: D0 #required, default: 4
  csn_pin: D8 #required, default: 15
  radio_interface_type: nrf24
  packet_repeats: 25 #optional, default: 50, total of sended packets per command
  listen_repeats: 10 #optional, default: 20, amount of received packets needed for a incoming command from other remote
  state_flush_interval: 5000 #optional, default: 10000, time in miliseconds to send the latest state report to HomeAssistant
  packet_repeat_throttle_threshold: 200 #optional, default: 200, threshold to limit the amount of packets in a second
  packet_repeat_throttle_sensitivity: 0 #optional, default: 0
  packet_repeat_minimum: 2 #optional, default: 3
  enable_automatic_mode_switching: false #optional, default: false
  rf24_power_level: MAX #optional, default: MAX, possible values: MIN, LOW, HIGH, MAX
  rf24_listen_channel: LOW #optional, default: LOW, possible values: LOW, MID, HIGH
  packet_repeats_per_loop: 10 #optional, default: 10, repeat packets sended per loop
  resend_last_command: false #optional, default: true, repeats the latest command after a random time between 2 and 3 seconds again
  rf24_channels: #optional, 1-3 values required when used, default: LOW-MID-HIGH, possible values: LOW, MID, HIGH
    - LOW
    - MID
    - HIGH
  on_command_received: #optional, useful to send remote commands to HA and process them further there in automations
    - homeassistant.event:
        event: esphome.mi_command_received
        data:
          device_id: !lambda "return format_hex(data.device_id);"
          group_id: !lambda "return data.group_id;"
          remote_type: !lambda "return data.remote_type.c_str();"
          command: !lambda "return data.command.c_str();"

light:
  - platform: mi
    id: light1
    name: ${name}-${location}-1
    device_id: 0xAB01 #required, hexadacimal value of MiLight id
    group_id: 1 #required, 1-4 or 1-8, depending on remote type
    remote_type: rgb_cct #required, possible values: rgb_cct, rgb, cct, rgbw, fut089, fut091, fut020
    default_transition_length: 0s #optional, but 0s gives a better behaviour instead the default 200ms
    # Set these to calibrate the color temperature of your light, measured with an external color temp. sensor or app
    # optional, [153, 370] mireds is the range miboxer uses internally ([6535, 2702] K)
    #cold_white_color_temperature: 6500 K
    #warm_white_color_temperature: 2700 K

button:
  - platform: mi
    id: pair
    name: ${name}-${location}-1 pair
    device_id: 0xAB01
    group_id: 1
    remote_type: rgb_cct
    command: pair
    entity_category: config
  - platform: mi
    id: unpair
    name: ${name}-${location}-1 unpair
    device_id: 0xAB01
    group_id: 1
    remote_type: rgb_cct
    command: unpair
    entity_category: config
