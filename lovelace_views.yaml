- name: security
  position: footer
  chip:
    type: alarm-control-panel
    entity: alarm_control_panel.alarm
    content_info: none
- name: main
  position: footer
  chip:
    type: action
    icon: mdi:home
- name: lights
  position: footer
  chip:
    type: light
    entity: light.alles
    content_info: none
    use_light_color: true
    hold_action:
      action: more-info
    card_mod:
      class: chipbadge
      style: |
        ha-card:after {
          {% if (expand(config.entity) | selectattr('state','eq','on') | list | count) > 0 %}
          content: "{{ expand(config.entity) | selectattr('state','eq','on') | list | count }}";
          {% endif %} 
        }
- name: devices
  position: footer
  chip:
    type: template
    icon: mdi:wrench-clock
    icon_color: blue
- name: media
  position: footer
  chip:
    type: entity
    entity: media_player.global
    content_info: none
    icon_color: indigo
    hold_action:
      action: more-info
    card_mod:
      class: chipbadge
      style: |
        ha-card:after {
          {% if (expand('media_player.alles') | selectattr('state','ne','off') | list | count) > 0 %}
          content: "{{ expand('media_player.alles') | selectattr('state','ne','off') | list | count }}";
          {% endif %} 
        }
        :host {
          width: var(--chip-height);
        }
        .content {
          {% set media_type = state_attr(config.entity, 'media_content_type') %}
          {% if media_type == 'tvshow' %}
            --card-mod-icon: mdi:television-classic;
            animation: flicker 1s linear infinite alternate;
          {% elif media_type == 'movie' %}
            --card-mod-icon: mdi:movie-roll;
            animation: spin 2s linear infinite reverse;
          {% elif media_type == 'music' %}
            --card-mod-icon: mdi:music;
            animation: beat 1.3s ease-out infinite both;
          {% elif media_type == 'playlist' %}
            --card-mod-icon: mdi:music;
            animation: beat 1.3s ease-out infinite both;
          {% else %}
            --card-mod-icon: mdi:play;
          {% endif %}
        }
        @keyframes flicker {
          0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --color: rgba(var(--rgb-indigo), 1); }
          32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --color: rgba(var(--rgb-indigo), 0.6); }
        }
        @keyframes beat {
          0%, 60% { --chip-icon-size: 19px; }
          5%, 17%, 57% { --chip-icon-size: 20px; }
          10%, 20%, 51% { --chip-icon-size: 21px; }
          25%, 45% { --chip-icon-size: 22px; }
          30%, 39% { --chip-icon-size: 23px; }
          33% { --chip-icon-size: 24px; }
        }
- name: location
  position: footer
  chip:
    type: template
    icon: mdi:heart
    icon_color: red
    card_mod:
      class: chipbadge
      style: |
        ha-card:after {
          {% if (states.persistent_notification | selectattr('state','eq','notifying') | list | count) > 0 %}
          content: "{{ states.persistent_notification | selectattr('state','eq','notifying') | list | count }}";
          {% endif %} 
        }
- name: finance
  position: header
  chip:
    type: template
    entity: sensor.uitgegeven_vandaag
    card_mod:
      class: chipbadge
      style: |
        ha-card:after {
          content: "{{ (states.sensor.te_besteden_per_dag.state|float - states.sensor.uitgegeven_vandaag.state|float)|int }}";
        }
    icon_color: "{% if states.sensor.uitgegeven_vandaag.state|float > states.sensor.te_besteden_per_dag.state|float %}red{% else %}green{% endif %}"
    icon: "{% if states.sensor.te_besteden_per_dag.state|float < 70 %}mdi:currency-eur-off{% else %}mdi:currency-eur{% endif %}"
- name: winston
  position: header
  chip:
    type: entity
    entity: vacuum.winston
    icon_color: red
    icon: mdi:robot-vacuum
    content_info: none
    card_mod:
      class: chipbadge
      style: |
        ha-card:after {
          {% if states.vacuum.winston.state != "docked" %}
          content: "{{ states.sensor.winston_room.state }}";
          {% endif %} 
        }
- name: plants
  position: header
  chip:
    type: action
    icon_color: light-green
    icon: mdi:sprout
    card_mod:
      class: chipbadge
      style: |
        ha-card:after {
          content: "{{ states.plant | selectattr('state','eq','problem') | list | count }}";
        }
- name: weather
  position: header
  chip:
    type: weather
    entity: weather.buienradar
    card_mod:
      class: chipbadge
      style: |
        ha-card:after {
          content: "{{ state_attr('weather.buienradar', 'temperature') }}";
        }
- name: time
  position: header
  chip:
    type: template
    entity: sensor.time
    content: "{{ states.sensor.time.state }}"
